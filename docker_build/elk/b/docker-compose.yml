version: "3.8"

services:
  setup-b:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELK_VERSION:-8.8.2}
    container_name: setup-b 
    volumes:
      - certs_b:/usr/share/elasticsearch/config/certs
    networks:
      - elastic_net      
    user: "0"
    command: >
      bash -c '
        if [ x${ELASTIC_PASSWORD:-password} == x ]; then
          echo "Set the ELASTIC_PASSWORD environment variable in the .env file";
          exit 1;
        elif [ x${KIBANA_PASSWORD:-password} == x ]; then
          echo "Set the KIBANA_PASSWORD environment variable in the .env file";
          exit 1;
        fi;
        if [ ! -f config/certs/ca.zip ]; then
          echo "Creating CA";
          bin/elasticsearch-certutil ca --silent --pem -out config/certs/ca.zip;
          unzip config/certs/ca.zip -d config/certs;
        fi;
        if [ ! -f config/certs/certs.zip ]; then
          echo "Creating certs";
          echo -ne \
          "instances:\n"\
          "  - name: es-b1\n"\
          "    dns:\n"\
          "      - es-b1\n"\
          "      - localhost\n"\
          "    ip:\n"\
          "      - 127.0.0.1\n"\
          > config/certs/instances.yml;
          bin/elasticsearch-certutil cert --silent --pem -out config/certs/certs.zip --in config/certs/instances.yml --ca-cert config/certs/ca/ca.crt --ca-key config/certs/ca/ca.key;
          unzip config/certs/certs.zip -d config/certs;
        fi;

        echo "Setting file permissions ...";
        chown -R root:root config/certs;
        
        find . -type d -exec chmod 777 \{\} \;;
        find . -type f -exec chmod 666 \{\} \;;
        
        echo "Waiting for Elasticsearch availability ...";
        until curl -s --cacert config/certs/ca/ca.crt https://es-b1:8200 | grep -q "missing authentication credentials"; do sleep 10; done;

        echo "Setting kibana_system password ...";
        until curl -s -X POST --cacert config/certs/ca/ca.crt -u "elastic:${ELASTIC_PASSWORD:-password}" -H "Content-Type: application/json" https://es-b1:8200/_security/user/kibana_system/_password -d "{\"password\":\"${KIBANA_PASSWORD:-password}\"}" | grep -q "^{}"; do sleep 5; done;

        echo "Setting Kibana dark mode...";
        until curl -s -X PUT  -u "elastic:${KIBANA_PASSWORD:-password}" -H "kbn-xsrf: true" -H "Content-Type: application/json" http://kibana-b:5602/api/saved_objects/config/"${ELK_VERSION:-8.8.2}"   -d "{\"attributes\":  { \"theme:darkMode\" : true} }" | grep -q "updated_at"; do sleep 5; done;

        echo "All done!";
      '
    healthcheck:
      test: ["CMD-SHELL", "[ -f config/certs/es-b1/es-b1.crt ]"]
      interval: 1s
      timeout: 5s
      retries: 120

  es-b1:
    depends_on:
      - setup-b
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELK_VERSION:-8.8.2}
    container_name: es-b1
    hostname: es-b1
    volumes:
      - certs_b:/usr/share/elasticsearch/config/certs
      - es_b1_data:/usr/share/elasticsearch/data
      - es_b1_logs:/usr/share/elasticsearch/logs
      - snapshots_b:/usr/share/elasticsearch/snapshots
    networks:
      - elastic_net         
    ports:
      - 8200:8200
    environment:
      - node.name=es-b1
      - discovery.type=single-node
      - cluster.name=${ES_CLUSTER:-elk-cluster}
      - http.port=8200
      - transport.port=8300      
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD:-password}
      - bootstrap.memory_lock=true
      - xpack.security.enabled=true
      - xpack.security.authc.api_key.enabled=true
      - xpack.security.http.ssl.enabled=true
      - xpack.security.http.ssl.key=certs/es-b1/es-b1.key
      - xpack.security.http.ssl.certificate=certs/es-b1/es-b1.crt
      - xpack.security.http.ssl.certificate_authorities=certs/ca/ca.crt
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.key=certs/es-b1/es-b1.key
      - xpack.security.transport.ssl.certificate=certs/es-b1/es-b1.crt
      - xpack.security.transport.ssl.certificate_authorities=certs/ca/ca.crt
      - xpack.security.transport.ssl.verification_mode=certificate
      - xpack.license.self_generated.type=${LICENSE:-basic}
      - xpack.monitoring.collection.enabled=true 
      - 'ES_JAVA_OPTS=-Xms${ES_HEAP_SIZE:-2g} -Xmx${ES_HEAP_SIZE:-2g}'
      - path.repo=/usr/share/elasticsearch/snapshots
    #mem_limit: ${MEM_LIMIT}
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s --cacert config/certs/ca/ca.crt https://localhost:8200 | grep -q 'missing authentication credentials'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120

 

  kibana-b:
    depends_on:
      - es-b1
    image: docker.elastic.co/kibana/kibana:${ELK_VERSION:-8.8.2}
    container_name: kibana-b
    hostname: kibana-b
    volumes:
      - certs_b:/usr/share/kibana/config/certs
      - kibanab_data:/usr/share/kibana/data
    networks:
      - elastic_net         
    ports:
      - 5602:5602
    environment:
      - SERVERNAME=kibana-b
      - SERVER_PORT=5602
      - ELASTICSEARCH_HOSTS=https://es-b1:8200
      - ELASTICSEARCH_USERNAME=${KIBANA_USERNAME:-kibana_system}
      #- ELASTICSEARCH_USERNAME=elastic # for older version of ELK
      - ELASTICSEARCH_PASSWORD=${ELASTIC_PASSWORD:-password}
      - ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES=config/certs/ca/ca.crt
      - 'ES_JAVA_OPTS=-Xms${ES_HEAP_SIZE:-2g} -Xmx${ES_HEAP_SIZE:-2g}'
    mem_limit: ${MEM_LIMIT}
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s -I http://localhost:5602 | grep -q 'HTTP/1.1 302 Found'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120

volumes:
  certs_b:
    driver: local
    driver_opts:
      type: none
      o: bind
      device:  ${ES_FOLDER}/${ES_CLUSTER:-elk-cluster}/config/certs
  es_b1_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device:  ${ES_FOLDER}/${ES_CLUSTER:-elk-cluster}/es-b1/data
  es_b1_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device:  ${ES_FOLDER}/${ES_CLUSTER:-elk-cluster}/es-b1/logs
  kibanab_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device:  ${ES_FOLDER}/${ES_CLUSTER:-elk-cluster}/kibana/data
  snapshots_b:
    driver: local
    driver_opts:
      type: none
      o: bind
      device:  ${ES_FOLDER}/${ES_CLUSTER:-elk-cluster}/snapshots
      
networks:
  elastic_net:
    external: true

