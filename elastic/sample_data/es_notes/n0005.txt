Title : Elasticsearch concurrency issue


This may happen especially for denormalized data, when a data change may impact many records.

And if another data change happens at the same time, then there will be a conflicts.


************ NOTE ****************
The problem is that Elasticsearch does not support ACID transactions. 
Changes to individual documents are ACIDic, but not changes involving multiple documents.
************ NOTE ****************

If your main data store is a relational database, and Elasticsearch is simply being used as a search engine 
or as a way to improve performance, make your changes in the database first and replicate those changes to 
Elasticsearch after they have succeeded. This way, you benefit from the ACID transactions available in the database, 
and all changes to Elasticsearch happen in the right order. Concurrency is dealt with in the relational database.

Because RDBMS data is normallized and support ACID
