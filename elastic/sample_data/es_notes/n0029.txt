ILM explaination.


***********************************************************
    Regular Index ILM
***********************************************************

1 - rollover is only defined in HOT phase. If no rollover defined, the SAME index will move to next phase,
    and eventually may gets deleted, this may cause problem when client still pushing data into the index (it creats new index , with the name of alias)

2 - the "min_age"  is calculated from last rollover time, if no rollover defined, will be the creation time.  

3 - Need to manually set alias to point to the first index to kick off.
    PUT log-events-000001
    {
      "aliases": {
        "log-events": {
          "is_write_index": true
        }
      }
    }

    * after rollover, a new index will be created (log-events-000002) automatically, which is taken care of index template
    * the ILM can automatically ADD the new index to the alias, and make it writable. 
    * alias will pointing to both log-events-000001 & log-events-000002, then only log-events-000002 is writable.
    * to allocate the shard of phase to specific phase, need to manually add node attrribute to elasticsearch.yml file, then restart node.
      (no API call can do it) 

    ===============================================================================
    A working sample : 

    // step 1 - this is for testing purpose to make ILM take action immediately. default every 10 mins.
    PUT _cluster/settings
    {
      "persistent": {
        "indices.lifecycle.poll_interval": "2s"
      }
    }


    // step 2 - setup the policy
    PUT _ilm/policy/log-events-policy
    {
      "policy": {
        "phases": {
          "hot": {
            "min_age": "0ms", 
            "actions": {
              "rollover": {
                "max_age": "1m"           // after 1 min, start rolling over (confirmed)
              }
            }
          },
          "warm": {
            "min_age": "2m",              // after roll over at 3m (=1m + 2m) since creation, start moving to warm (confirmed)
            "actions": {
            }
          },
          "cold": {                       // after roll over at 4m (1m + 3m) since creation, start moving to code (confirmed)
            "min_age": "3m",
            "actions": {
            }
          },
          "delete": {                     // after roll over at 5m (1m + 4m) since creation, start to delete (confirmed)
            "min_age": "4m",
            "actions": {
              "delete": {}
            }
          }
        }
      }
    }

    // setup index template 
    PUT _index_template/log-events-template
    {
      "index_patterns": [
        "log-events-*"
      ],
      "template": {
        "settings": {
          "number_of_shards": 1,
          "number_of_replicas": 1,
          "index.lifecycle.name": "log-events-policy",
          "index.lifecycle.rollover_alias": "log-events"
        },
        "mappings": {
          "properties": {
            "message": {
              "type": "text"
            },
            "@timestamp": {
              "type": "date",
              "format": "yyyy-MM-dd HH:mm:ss"
            }
          }
        }
      }
    }

    // mqanually set this to kick off , 
    // client still using alias to push data
    // DO NOT put this into index template, let ILM to manage to change writeable index, otherwise will cause ERROR
    PUT log-events-000001
    {
      "aliases": {
        "log-events": {
          "is_write_index": true
        }
      }
    }
    

    // monitor the ILM process
    GET log-events/_ilm/explain

***********************************************************
    Data Stream Index ILM
***********************************************************
   
  step 1 - policy can be same as regular index policy

  step 2  - index template
          PUT _index_template/log-events-template
          {
            "index_patterns": [
              "log-events*"             // the pattern changed, as "log-events" is the datastream name (similar to alias)
                                        // the pattern ensure when data being pushed to "log-events", index template applies
            ],
            "data_stream": {},          // Added this to flag this is for data-stream
            "template": {
              "settings": {
                "number_of_shards": 1,
                "number_of_replicas": 1,
                "index.lifecycle.name": "log-events-policy",
                "index.lifecycle.rollover_alias": "log-events"
              },
              "mappings": {
                "properties": {
                  "message": {
                    "type": "text"
                  },
                  "@timestamp": {
                    "type": "date",
                    "format": "yyyy-MM-dd HH:mm:ss"
                  }
                }
              }
            }
          }


  * data stream, no need to manually kick off by creating the first index.
    client just use datastream name ( similar to alias) to start pushing data


  * the actual index names are all managed by Idatastream, .ds-log-events-2023.08.20-000003   
  



  


