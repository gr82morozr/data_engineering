version: '3'

services:
  spark-master:
    image: spark-jupyterlab
    container_name: spark-master
    hostname: spark-master
    command: /bin/bash -c "/opt/spark/start-master.sh"
    ports:
      - "8080:8080"
      - "7077:7077"    
      - "8888:8888"
    networks:
      - data-network
    volumes:
      - ./notebooks:/home/spark/notebooks 
    deploy:
      resources:
        limits:
          memory: 4G 
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://spark-master:8080 | grep -qE 'Spark Master at spark://spark-master:7077'"]
      interval: 10s
      timeout: 240s
      retries: 24

  spark-worker1:
    image: spark-jupyterlab
    container_name: spark-worker1
    hostname: spark-worker1
    command: /bin/bash -c "/opt/spark/bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077"
    networks:
      - data-network
    depends_on:
      - spark-master
    deploy:
      resources:
        limits:
          memory: 2G      
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://spark-master:8080 | grep -qE 'Spark Master at spark://spark-master:7077'"]
      interval: 10s
      timeout: 240s
      retries: 24

  spark-worker2:
    image: spark-jupyterlab
    container_name: spark-worker2
    hostname: spark-worker2
    command: /bin/bash -c "/opt/spark/bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077"
    networks:
      - data-network
    depends_on:
      - spark-master
    deploy:
      resources:
        limits:
          memory: 2G      
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://spark-master:8080 | grep -qE 'Spark Master at spark://spark-master:7077'"]
      interval: 10s
      timeout: 240s
      retries: 24      

  spark-worker3:
    image: spark-jupyterlab
    container_name: spark-worker3
    hostname: spark-worker3
    command: /bin/bash -c "/opt/spark/bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077"
    networks:
      - data-network
    depends_on:
      - spark-master
    deploy:
      resources:
        limits:
          memory: 2G      
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://spark-master:8080 | grep -qE 'Spark Master at spark://spark-master:7077'"]
      interval: 10s
      timeout: 240s
      retries: 24  

  zookeeper:
    image: zookeeper:${ZOOKEEPER_VERSION}
    container_name: zookeeper
    hostname: zookeeper
    networks:
      - data-network    
    ports:
      - 2181:2181
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=zookeeper:2888:3888;2181
    healthcheck:
      test: ["CMD", "echo", "ruok", "|", "nc", "localhost", "2181", "|", "grep", "imok"]
      interval: 30s
      timeout: 10s
      retries: 3

  kafka:
    image: bitnami/kafka:${KAFKA_VERSION}
    container_name: kafka
    hostname: kafka
    depends_on:
      zookeeper:
        condition: service_healthy
    networks:
      - data-network        
    ports:
      - 9092:9092
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
    #volumes:
    #  - ./kafka_data:/bitnami/kafka/data




  kafkahq:
    image: tchiotludo/akhq:${AKHQ_VERSION}
    container_name: kafkahq
    hostname: kafkahq
    networks:
      - data-network
    ports:
      - 8088:8080
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            kafka:
              properties:
                bootstrap.servers: "kafka:9092"

networks:
  data-network:
    external: true