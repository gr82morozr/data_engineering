version: '3'

services:
  spark-master:
    image: spark-jupyterlab
    container_name: spark-master
    hostname: spark-master
    command: /bin/bash -c "/opt/spark/start-master.sh"
    ports:
      - "8080:8080"
      - "7077:7077"    
      - "8888:8888"
    networks:
      - spark-network
    volumes:
      - ./notebooks:/home/spark/notebooks 
    deploy:
      resources:
        limits:
          memory: 4G 
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://spark-master:8080 | grep -qE 'Spark Master at spark://spark-master:7077'"]
      interval: 10s
      timeout: 240s
      retries: 24

  spark-worker1:
    image: spark-jupyterlab
    container_name: spark-worker1
    hostname: spark-worker1
    command: /bin/bash -c "/opt/spark/bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077"
    networks:
      - spark-network
    depends_on:
      - spark-master
    deploy:
      resources:
        limits:
          memory: 2G      
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://spark-master:8080 | grep -qE 'Spark Master at spark://spark-master:7077'"]
      interval: 10s
      timeout: 240s
      retries: 24

  spark-worker2:
    image: spark-jupyterlab
    container_name: spark-worker2
    hostname: spark-worker2
    command: /bin/bash -c "/opt/spark/bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077"
    networks:
      - spark-network
    depends_on:
      - spark-master
    deploy:
      resources:
        limits:
          memory: 2G      
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://spark-master:8080 | grep -qE 'Spark Master at spark://spark-master:7077'"]
      interval: 10s
      timeout: 240s
      retries: 24      

  spark-worker3:
    image: spark-jupyterlab
    container_name: spark-worker3
    hostname: spark-worker3
    command: /bin/bash -c "/opt/spark/bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077"
    networks:
      - spark-network
    depends_on:
      - spark-master
    deploy:
      resources:
        limits:
          memory: 2G      
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://spark-master:8080 | grep -qE 'Spark Master at spark://spark-master:7077'"]
      interval: 10s
      timeout: 240s
      retries: 24  

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    hostname: zookeeper    
    ports:
      - "2181:2181"
    networks:
      - spark-network
    healthcheck:
      test: ["CMD", "echo", "ruok", "|", "nc", "localhost", "2181", "|", "grep", "imok"]
      interval: 30s
      timeout: 10s
      retries: 3

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    hostname: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CREATE_TOPICS: "test-topic:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
    networks:
      - spark-network
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --bootstrap-server localhost:9092 --list | grep -q test-topic"]
      interval: 1m
      timeout: 10s
      retries: 3


networks:
  spark-network:
